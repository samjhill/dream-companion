name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm run test:run
    
    - name: Run frontend tests with coverage
      run: |
        cd frontend
        npm run test:coverage
    
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('src/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install backend dependencies
      run: |
        cd src
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run backend linting
      run: |
        cd src
        pip install flake8
        flake8 app/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run backend tests
      run: |
        cd src
        python -m pytest tests/ -v --cov=app --cov-report=xml --cov-report=html
    
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: src/coverage.xml
        flags: backend
        name: backend-coverage

  integration-tests:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd frontend && npm ci
        cd ../src && pip install -r requirements.txt
    
    - name: Start backend server
      run: |
        cd src
        python run.py &
        sleep 10
    
    - name: Start frontend server
      run: |
        cd frontend
        npm run build
        npm run preview &
        sleep 10
    
    - name: Run integration tests
      run: |
        # Add integration test commands here
        echo "Integration tests would run here"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          frontend/coverage/
          src/htmlcov/
          src/coverage.xml

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests, integration-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd frontend && npm ci
        cd ../src && pip install -r requirements.txt
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Deploy to AWS (if configured)
      run: |
        echo "Deployment would happen here"
        # Add your deployment commands here
